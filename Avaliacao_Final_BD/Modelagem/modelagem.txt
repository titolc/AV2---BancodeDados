-- 01_Modelagem.sql
-- Este arquivo contém os comentários sobre as escolhas de design do banco de dados,
-- formatados como comentários SQL.

-- ######################################################
-- 01_Modelagem.txt - Comentários sobre Escolhas de Design
-- ######################################################

-- ########## 1. Breve Descrição do Sistema ##########

-- O sistema proposto visa conectar psicólogos a pacientes, facilitando o agendamento e gerenciamento de consultas.
-- Os atores principais são:
-- * Psicólogos: Profissionais da saúde mental que oferecem serviços de consulta.
--   Eles possuem informações de registro (CRP), contato, formação, especialidades,
--   abordagens terapêuticas, valor da consulta e disponibilidade para benefícios sociais.
-- * Pacientes: Indivíduos que buscam atendimento psicológico.
--   Eles possuem informações pessoais, contato, benefícios sociais e preferências de especialidades e abordagens.

-- As entidades centrais que sustentam o projeto são:
-- * `psicologos`: Armazena todas as informações do profissional.
-- * `pacientes`: Contém os dados dos usuários que buscam atendimento.
-- * `especialidades`: Lista as áreas de atuação (ex: Depressão, Ansiedade).
-- * `abordagens`: Lista as metodologias terapêuticas (ex: TCC, Psicanálise).
-- * `consultas`: Registra os agendamentos entre psicólogos e pacientes.
-- * `avaliacoes`: Armazena o feedback dos pacientes sobre as consultas.
-- * `enderecos_psicologos` e `enderecos_pacientes`: Armazenam os dados de localização, separados para flexibilidade.
-- * `psicologos_especialidades`, `psicologos_abordagens`, `preferencia_especialidades`,
--   `preferencia_abordagens`: Tabelas associativas para relacionamentos muitos-para-muitos.


-- ########## 2. Principais Relacionamentos e Cardinalidades ##########

-- O modelo de dados emprega os seguintes tipos de relacionamentos:

-- * Relacionamentos Um-para-Um (1:1):
--   * `psicologos` <-> `enderecos_psicologos`: Um psicólogo tem um e apenas um endereço,
--     e um endereço pertence a um e apenas um psicólogo. A chave primária de
--     `enderecos_psicologos` é também uma chave estrangeira referenciando `psicologos`.
--   * `pacientes` <-> `enderecos_pacientes`: Similarmente, um paciente tem um e apenas um endereço,
--     e um endereço pertence a um e apenas um paciente. A chave primária de
--     `enderecos_pacientes` é também uma chave estrangeira referenciando `pacientes`.
--   * `consultas` <-> `avaliacoes`: Uma consulta pode ter uma e apenas uma avaliação,
--     e uma avaliação se refere a uma e apenas uma consulta. A chave estrangeira
--     `id_consulta` na tabela `avaliacoes` é definida como `UNIQUE` para reforçar essa cardinalidade.

-- * Relacionamentos Um-para-Muitos (1:N):
--   * `psicologos` -> `consultas`: Um psicólogo pode ter várias consultas, mas uma consulta
--     pertence a apenas um psicólogo.
--   * `pacientes` -> `consultas`: Um paciente pode agendar várias consultas, mas uma consulta
--     é agendada por apenas um paciente.
--   * `psicologos` -> `avaliacoes`: Um psicólogo pode receber várias avaliações, mas uma avaliação
--     é para um psicólogo específico.
--   * `pacientes` -> `avaliacoes`: Um paciente pode fazer várias avaliações, mas uma avaliação
--     é feita por um paciente específico.

-- * Relacionamentos Muitos-para-Muitos (N:M):
--   * `psicologos` <-> `especialidades`: Um psicólogo pode ter várias especialidades, e uma especialidade
--     pode ser oferecida por vários psicólogos. Resolvido pela tabela associativa `psicologos_especialidades`.
--   * `psicologos` <-> `abordagens`: Um psicólogo pode ter várias abordagens, e uma abordagem
--     pode ser utilizada por vários psicólogos. Resolvido pela tabela associativa `psicologos_abordagens`.
--   * `pacientes` <-> `especialidades` (preferência): Um paciente pode ter preferência por várias especialidades,
--     e uma especialidade pode ser preferência de vários pacientes.
--     Resolvido pela tabela associativa `preferencia_especialidades`.
--   * `pacientes` <-> `abordagens` (preferência): Um paciente pode ter preferência por várias abordagens,
--     e uma abordagem pode ser preferência de vários pacientes.
--     Resolvido pela tabela associativa `preferencia_abordagens`.


-- ########## 3. Explicação de Escolhas de Integridade ##########

-- As escolhas de integridade foram feitas para garantir a consistência e a validade dos dados no sistema:

-- * Chaves Primárias (PK): Todas as tabelas possuem uma chave primária (`id_psicologo`, `id_paciente`,
--   `id_especialidade`, etc.) definida como `INT PRIMARY KEY AUTO_INCREMENT`.
--   Isso garante que cada registro tenha um identificador único e que novos IDs sejam gerados automaticamente,
--   evitando duplicidade e facilitando a identificação.

-- * Chaves Estrangeiras (FK): As FKs são utilizadas para estabelecer relacionamentos entre as tabelas e impor a integridade referencial.
--   Por exemplo, `id_psicologo` em `consultas` é uma FK para `psicologos`.
--   * `ON DELETE CASCADE`: Esta cláusula foi aplicada em todas as chaves estrangeiras.
--     A escolha por `CASCADE` significa que, se um registro pai for excluído (ex: um psicólogo é removido),
--     todos os registros dependentes (ex: seus endereços, suas especialidades/abordagens, suas consultas, suas avaliações)
--     serão automaticamente excluídos. Essa escolha simplifica a manutenção da integridade em cenários de exclusão,
--     mas deve ser usada com cautela, pois uma exclusão em cascata pode ter um impacto significativo.

-- * `UNIQUE`:
--   * `crp` em `psicologos`: Garante que não haja dois psicólogos com o mesmo número de registro profissional.
--   * `email` em `psicologos` e `pacientes`: Assegura que cada usuário (psicólogo ou paciente)
--     tenha um email exclusivo para login e contato.
--   * `cpf` em `pacientes`: Garante que cada paciente seja único pelo seu CPF.
--   * `foto` em `pacientes`: Impede que a mesma URL de foto de perfil seja associada a mais de um paciente.
--   * `nome_especialidade` em `especialidades` e `nome_abordagem` em `abordagens`:
--     Evita a duplicação de nomes de especialidades e abordagens.
--   * `id_consulta` em `avaliacoes`: Garante que uma consulta possa ser avaliada apenas uma vez.

-- * `NOT NULL`: Aplicado a colunas essenciais como `nome`, `email`, `contato`, `senha_hash`,
--   `data_consulta`, `rua`, `numero`, `cidade`, `estado`, `cep`, `latitude`, `longitude`.
--   Isso força a inserção de dados obrigatórios, garantindo que informações cruciais não estejam ausentes.

-- * `ENUM`: Usado extensivamente para campos com um conjunto limitado e predefinido de valores
--   (`modalidade_atendimento`, `beneficio_social`, `status`, `modalidade`, `tipo`).
--   Esta é a forma mais eficaz e otimizada no MySQL para simular `CHECK` constraints
--   (que só foram totalmente impostas em versões mais recentes do MySQL) e garantir a integridade dos dados,
--   prevenindo a inserção de valores inválidos. Por exemplo, o status de uma consulta
--   só pode ser 'AGENDADA', 'CONCLUIDA' ou 'CANCELADA'.

-- * `CHECK (nota BETWEEN 1 AND 5)`: Embora as `ENUM` sejam preferenciais para listas fixas,
--   para um intervalo numérico como a `nota` de avaliação, a `CHECK` constraint é o ideal.
--   Em MySQL 8.0.16+, esta constraint é imposta. Garante que as notas das avaliações
--   estejam sempre dentro de um intervalo válido (1 a 5).


-- ########## 4. Possíveis Extensões Futuras ##########

-- O design atual do banco de dados foi pensado para ser modular e extensível,
-- permitindo a adição de novas funcionalidades sem a necessidade de grandes reestruturações:

-- * Gerenciamento de Disponibilidade de Psicólogos: A estrutura permite a adição de uma nova tabela
--   `disponibilidade` (`id_disponibilidade` PK, `id_psicologo` FK, `dia_semana`, `hora_inicio`, `hora_fim`).
--   Esta tabela se relacionaria 1:N com `psicologos`, permitindo que cada psicólogo defina múltiplos
--   blocos de horários disponíveis, que seriam então usados para validar o agendamento de consultas.

-- * Histórico de Pacientes e Notas Terapêuticas: Para psicólogos que desejam manter registros de sessões,
--   uma tabela `historico_paciente` (`id_historico` PK, `id_paciente` FK, `id_psicologo` FK,
--   `data_registro`, `observacao_terapeutica` TEXT) poderia ser implementada.
--   O controle de acesso a essa tabela seria crucial para garantir a privacidade.

-- * Sistema de Mensagens/Chat Interno: Uma funcionalidade de chat entre psicólogos e pacientes poderia
--   ser construída com tabelas como `mensagens` (`id_mensagem` PK, `id_remetente` INT, `id_destinatario` INT,
--   `conteudo` TEXT, `data_envio` TIMESTAMP, `lida` BOOLEAN).
--   As colunas `id_remetente` e `id_destinatario` poderiam referenciar os IDs de psicólogos ou pacientes,
--   ou uma tabela `usuarios` genérica se ambos pudessem ser remetentes/destinatários.

-- * Módulo Financeiro Mais Abrangente: Atualmente, o `valor` da consulta está na tabela `consultas`.
--   Para um controle financeiro mais detalhado (pagamentos parcelados, estornos, comissões),
--   tabelas como `transacoes_financeiras` (`id_transacao` PK, `id_consulta` FK, `valor_pago`,
--   `data_pagamento`, `metodo_pagamento`, `status_pagamento`) e `extratos_psicologos`
--   (`id_extrato` PK, `id_psicologo` FK, `mes_ano`, `total_recebido`, `comissao_plataforma`)
--   poderiam ser adicionadas.

-- * Notificações e Lembretes: Uma tabela `notificacoes` (`id_notificacao` PK, `id_usuario` INT
--   (referenciando pacientes ou psicólogos), `tipo_notificacao` ENUM, `conteudo` TEXT,
--   `data_criacao` TIMESTAMP, `lida` BOOLEAN) permitiria a implementação de avisos automáticos
--   sobre novas consultas, lembretes, avaliações recebidas, etc.

-- A utilização de tabelas associativas para relacionamentos N:M (`psicologos_especialidades`,
-- `psicologos_abordagens`, etc.) é um ponto forte, pois permite adicionar novas especialidades
-- ou abordagens sem modificar o esquema das tabelas principais, facilitando a escalabilidade.
-- A separação de endereços em tabelas distintas também oferece flexibilidade caso no futuro
-- um usuário precise ter múltiplos endereços (embora a cardinalidade atual seja 1:1,
-- a separação já prevê essa possibilidade com uma mudança mínima).
